<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="color-scheme" content="light dark" />
    <meta
      name="description"
      content="WASM API client with bells and whistles."
    />
    <link rel="stylesheet" href="css/pico.classless.green.min.css" />
    <link rel="stylesheet" href="css/styles.css" />
    <title>Clientele</title>
    <script src="js/index.js" type="module"></script>
    <script src="js/wasm_exec.js"></script>
  </head>
  <body>
    <script>
      if (!WebAssembly.instantiateStreaming) { // polyfill
        WebAssembly.instantiateStreaming = async (resp, importObject) => {
          const source = await (await resp).arrayBuffer();
          return await WebAssembly.instantiate(source, importObject);
        };
      }

      const go = new Go();
      const WASM_URL = 'clientele.wasm';
      let mod, clientele;
      WebAssembly.instantiateStreaming(fetch(WASM_URL), go.importObject).then(async (result) => {
        mod = result.module;
        clientele = result.instance;
        let retries = 0;
        while (retries < 100) {
          await run();
          retries++;
        }
      }).catch((err) => {
        console.error(err);
      });

      async function run() {
        // console.clear();
        await go.run(clientele);
        clientele = await WebAssembly.instantiate(mod, go.importObject); // reset instance
      }
    </script>
    <header>
      <nav>
        <ul>
          <li>
            <strong>
              <a href="/">Making use of our clientele</a>
            </strong>
          </li>
        </ul>
        <ul>
          <li>
            <a href="/about">About</a>
          </li>
        </ul>
      </nav>
    </header>
    <main>
      {{block "content" .}}
      <p>Content not loaded! This is an error.</p>
      {{end}}
    </main>
    <footer>
      <a href="https://github.com/ioansx/clientele">GitHub</a>
    </footer>
  </body>
</html>
